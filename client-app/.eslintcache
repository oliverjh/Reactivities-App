[{"G:\\Oliver\\Development\\App with .Net Core and React - Udemy\\Reactivities\\client-app\\src\\index.tsx":"1","G:\\Oliver\\Development\\App with .Net Core and React - Udemy\\Reactivities\\client-app\\src\\reportWebVitals.ts":"2","G:\\Oliver\\Development\\App with .Net Core and React - Udemy\\Reactivities\\client-app\\src\\app\\layout\\App.tsx":"3","G:\\Oliver\\Development\\App with .Net Core and React - Udemy\\Reactivities\\client-app\\src\\features\\nav\\NavBar.tsx":"4","G:\\Oliver\\Development\\App with .Net Core and React - Udemy\\Reactivities\\client-app\\src\\features\\activities\\dashboard\\ActivityDashboard.tsx":"5","G:\\Oliver\\Development\\App with .Net Core and React - Udemy\\Reactivities\\client-app\\src\\features\\activities\\dashboard\\ActivityList.tsx":"6","G:\\Oliver\\Development\\App with .Net Core and React - Udemy\\Reactivities\\client-app\\src\\features\\activities\\details\\ActivityDetails.tsx":"7","G:\\Oliver\\Development\\App with .Net Core and React - Udemy\\Reactivities\\client-app\\src\\features\\activities\\form\\ActivityForm.tsx":"8","G:\\Oliver\\Development\\App with .Net Core and React - Udemy\\Reactivities\\client-app\\src\\app\\models\\activity.ts":"9","G:\\Oliver\\Development\\App with .Net Core and React - Udemy\\Reactivities\\client-app\\src\\app\\api\\agent.ts":"10","G:\\Oliver\\Development\\App with .Net Core and React - Udemy\\Reactivities\\client-app\\src\\app\\layout\\LoadingComponent.tsx":"11","G:\\Oliver\\Development\\App with .Net Core and React - Udemy\\Reactivities\\client-app\\src\\app\\stores\\activityStore.ts":"12","G:\\Oliver\\Development\\App with .Net Core and React - Udemy\\Reactivities\\client-app\\src\\features\\home\\HomePage.tsx":"13","G:\\Oliver\\Development\\App with .Net Core and React - Udemy\\Reactivities\\client-app\\src\\app\\layout\\ScrollToTop.tsx":"14","G:\\Oliver\\Development\\App with .Net Core and React - Udemy\\Reactivities\\client-app\\src\\features\\activities\\dashboard\\ActivityListItem.tsx":"15","G:\\Oliver\\Development\\App with .Net Core and React - Udemy\\Reactivities\\client-app\\src\\features\\activities\\details\\ActivityDetailedHeader.tsx":"16","G:\\Oliver\\Development\\App with .Net Core and React - Udemy\\Reactivities\\client-app\\src\\features\\activities\\details\\ActivityDetailedSidebar.tsx":"17","G:\\Oliver\\Development\\App with .Net Core and React - Udemy\\Reactivities\\client-app\\src\\features\\activities\\details\\ActivityDetailedInfo.tsx":"18","G:\\Oliver\\Development\\App with .Net Core and React - Udemy\\Reactivities\\client-app\\src\\features\\activities\\details\\ActivityDetailedChat.tsx":"19","G:\\Oliver\\Development\\App with .Net Core and React - Udemy\\Reactivities\\client-app\\src\\app\\layout\\NotFound.tsx":"20"},{"size":841,"mtime":1615826353452,"results":"21","hashOfConfig":"22"},{"size":425,"mtime":499162500000,"results":"23","hashOfConfig":"22"},{"size":1486,"mtime":1615826393712,"results":"24","hashOfConfig":"22"},{"size":805,"mtime":1614618239941,"results":"25","hashOfConfig":"22"},{"size":932,"mtime":1614618601023,"results":"26","hashOfConfig":"22"},{"size":1053,"mtime":1614878027328,"results":"27","hashOfConfig":"22"},{"size":1518,"mtime":1615483278062,"results":"28","hashOfConfig":"22"},{"size":3503,"mtime":1614877999641,"results":"29","hashOfConfig":"22"},{"size":169,"mtime":1611074683773,"results":"30","hashOfConfig":"22"},{"size":1833,"mtime":1615826771155,"results":"31","hashOfConfig":"22"},{"size":376,"mtime":1611767340750,"results":"32","hashOfConfig":"22"},{"size":4731,"mtime":1615483237891,"results":"33","hashOfConfig":"22"},{"size":824,"mtime":1614878098213,"results":"34","hashOfConfig":"22"},{"size":294,"mtime":1614617571663,"results":"35","hashOfConfig":"22"},{"size":1553,"mtime":1614878036692,"results":"36","hashOfConfig":"22"},{"size":1740,"mtime":1614705786716,"results":"37","hashOfConfig":"22"},{"size":2167,"mtime":1614877867848,"results":"38","hashOfConfig":"22"},{"size":1620,"mtime":1614877086865,"results":"39","hashOfConfig":"22"},{"size":2122,"mtime":1614877402975,"results":"40","hashOfConfig":"22"},{"size":627,"mtime":1615481573140,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"mtc19r",{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"57","usedDeprecatedRules":"46"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"46"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"63","messages":"64","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"46"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},"G:\\Oliver\\Development\\App with .Net Core and React - Udemy\\Reactivities\\client-app\\src\\index.tsx",[],"G:\\Oliver\\Development\\App with .Net Core and React - Udemy\\Reactivities\\client-app\\src\\reportWebVitals.ts",[],["86","87"],"G:\\Oliver\\Development\\App with .Net Core and React - Udemy\\Reactivities\\client-app\\src\\app\\layout\\App.tsx",[],"G:\\Oliver\\Development\\App with .Net Core and React - Udemy\\Reactivities\\client-app\\src\\features\\nav\\NavBar.tsx",[],"G:\\Oliver\\Development\\App with .Net Core and React - Udemy\\Reactivities\\client-app\\src\\features\\activities\\dashboard\\ActivityDashboard.tsx",[],"G:\\Oliver\\Development\\App with .Net Core and React - Udemy\\Reactivities\\client-app\\src\\features\\activities\\dashboard\\ActivityList.tsx",[],"G:\\Oliver\\Development\\App with .Net Core and React - Udemy\\Reactivities\\client-app\\src\\features\\activities\\details\\ActivityDetails.tsx",["88"],"import { observer } from 'mobx-react-lite';\r\nimport React, { useContext, useEffect } from 'react';\r\nimport { RouteComponentProps } from 'react-router-dom';\r\nimport { Grid } from 'semantic-ui-react';\r\nimport LoadingComponent from '../../../app/layout/LoadingComponent';\r\nimport ActivityStore from '../../../app/stores/activityStore';\r\nimport ActivityDetailedHeader from './ActivityDetailedHeader';\r\nimport ActivityDetailedInfo from './ActivityDetailedInfo';\r\nimport ActivityDetailedChat from './ActivityDetailedChat';\r\nimport ActivityDetailedSidebar from './ActivityDetailedSidebar';\r\n\r\ninterface DetailParms {\r\n  id: string\r\n}\r\n\r\nexport const ActivityDetails: React.FC<RouteComponentProps<DetailParms>> = ({match}) => {\r\n  const activityStore = useContext(ActivityStore);\r\n  const {activity: activity, loadActivity, loadingInital} = activityStore;\r\n\r\n  useEffect(() => {\r\n    loadActivity(match.params.id)\r\n  }, [loadActivity, match.params.id]);\r\n\r\n  if (loadingInital) return <LoadingComponent content='Loading activity...' />\r\n\r\n  if (!activity) {\r\n    return <h2>Activity not found</h2>\r\n  }\r\n\r\n    return (\r\n        <Grid>\r\n          <Grid.Column width={10}>\r\n            <ActivityDetailedHeader activity={activity} />\r\n            <ActivityDetailedInfo activity={activity} />\r\n            <ActivityDetailedChat />\r\n          </Grid.Column>\r\n          <Grid.Column width={6}>\r\n            <ActivityDetailedSidebar />\r\n          </Grid.Column>\r\n        </Grid>\r\n    )\r\n}\r\n\r\nexport default observer(ActivityDetails);","G:\\Oliver\\Development\\App with .Net Core and React - Udemy\\Reactivities\\client-app\\src\\features\\activities\\form\\ActivityForm.tsx",["89"],"import React, {FormEvent, useContext, useEffect, useState} from 'react';\r\nimport { Button, Form, Grid, Segment } from 'semantic-ui-react';\r\nimport { IActivity } from '../../../app/models/activity';\r\nimport {v4 as uuid} from 'uuid';\r\nimport ActivityStore from '../../../app/stores/activityStore';\r\nimport { observer } from 'mobx-react-lite';\r\nimport { Interface } from 'readline';\r\nimport { RouteComponentProps } from 'react-router-dom';\r\n\r\ninterface DetailParams {\r\n    id: string;\r\n}\r\n\r\nexport const ActivityForm: React.FC<RouteComponentProps<DetailParams>> = ({match, history}) => {\r\n    const activityStore = useContext(ActivityStore);\r\n    const {createActivity, editActivity, submitting, activity: initialFormState, loadActivity, clearActivity} = activityStore;\r\n\r\n    const [activity, setActivity] = useState<IActivity>({\r\n        id: '',\r\n        title: '',\r\n        category: '',\r\n        description: '',\r\n        date: '',\r\n        city: '',\r\n        venue: ''\r\n    });\r\n\r\n    useEffect(() => {\r\n        if (match.params.id && activity.id.length === 0) {\r\n            loadActivity(match.params.id).then(\r\n                () => initialFormState && setActivity(initialFormState))\r\n        }\r\n        return () => {\r\n            clearActivity();\r\n        }\r\n    }, [loadActivity, clearActivity, match.params.id, initialFormState, activity.id.length]);\r\n\r\n    const handleSubmit = () => {\r\n        if (activity.id.length === 0) {\r\n            let newActivity = {\r\n                ...activity,\r\n                id: uuid()\r\n            }\r\n            createActivity(newActivity).then(() => history.push(`/activities/${newActivity.id}`));\r\n        } else {\r\n            editActivity(activity).then(() => history.push(`/activities/${activity.id}`));\r\n        }\r\n    }\r\n\r\n    const handleInputChange = (\r\n        event: FormEvent<HTMLInputElement | HTMLTextAreaElement>\r\n      ) => {\r\n        const { name, value } = event.currentTarget;\r\n        setActivity({ ...activity, [name]: value });\r\n      };\r\n\r\n    return (\r\n        <Grid>\r\n            <Grid.Column width={10}>\r\n                <Segment clearing>\r\n                    <Form onSubmit={handleSubmit}>\r\n                        <Form.Input name='title' placeholder='Title' value={activity.title} onChange={handleInputChange} />\r\n                        <Form.TextArea name='description' rows={2} placeholder='Description' value={activity.description} onChange={handleInputChange} />\r\n                        <Form.Input name='category' placeholder='Category' value={activity.category} onChange={handleInputChange} />\r\n                        <Form.Input name='date' type='datetime-local' placeholder='Date' value={activity.date} onChange={handleInputChange} />\r\n                        <Form.Input name='city' placeholder='City' value={activity.city} onChange={handleInputChange} />\r\n                        <Form.Input name='venue' placeholder='Venue' value={activity.venue} onChange={handleInputChange} />\r\n                        <Button loading={submitting} floated='right' positive type='submit' content='Submit' />\r\n                        <Button \r\n                            onClick={() => history.push('/activities')} \r\n                            floated='right'\r\n                            type='button' \r\n                            content='Cancel'\r\n                        />\r\n                    </Form>\r\n                </Segment>\r\n            </Grid.Column>\r\n        </Grid>\r\n    )\r\n}\r\n\r\nexport default observer(ActivityForm);","G:\\Oliver\\Development\\App with .Net Core and React - Udemy\\Reactivities\\client-app\\src\\app\\models\\activity.ts",[],"G:\\Oliver\\Development\\App with .Net Core and React - Udemy\\Reactivities\\client-app\\src\\app\\api\\agent.ts",["90"],"G:\\Oliver\\Development\\App with .Net Core and React - Udemy\\Reactivities\\client-app\\src\\app\\layout\\LoadingComponent.tsx",[],"G:\\Oliver\\Development\\App with .Net Core and React - Udemy\\Reactivities\\client-app\\src\\app\\stores\\activityStore.ts",["91"],"import { throws } from 'assert';\r\nimport { observable, action, makeObservable, computed, configure, runInAction } from 'mobx';\r\nimport { createContext, SyntheticEvent } from 'react';\r\nimport agent from '../api/agent';\r\nimport { IActivity } from '../models/activity';\r\n\r\nconfigure({enforceActions: 'always'});\r\n\r\nexport class ActivityStore {\r\n    @observable activityRegistry = new Map();\r\n    @observable activities: IActivity[] = [];\r\n    @observable activity: IActivity | null = null;\r\n    @observable loadingInital = false;\r\n    @observable submitting = false;\r\n    @observable target = '';\r\n\r\n    @computed get activitiesByDate() {\r\n        return this.groupActivitiesByDate(Array.from(this.activityRegistry.values()));\r\n        //return Array.from(this.activityRegistry.values()).slice().sort((a, b) => Date.parse(a.date) - Date.parse(b.date))\r\n    }\r\n\r\n    groupActivitiesByDate(activities: IActivity[]) {\r\n        const sortedActivities = activities.slice().sort(\r\n            (a, b) => Date.parse(a.date) - Date.parse(b.date)\r\n        )\r\n        return Object.entries(sortedActivities.reduce((activities, activity)=> {\r\n            const date = activity.date.split('T')[0];\r\n            activities[date] = activities[date] ? [...activities[date], activity] : [activity];\r\n            return activities;\r\n        }, {} as {[key: string]: IActivity[]}));\r\n    }\r\n\r\n    constructor() {\r\n        makeObservable(this);\r\n    }\r\n\r\n    @action loadActivities = async () => {\r\n        this.loadingInital = true;\r\n        try {\r\n            const activities = await agent.Activities.list();\r\n            runInAction(() => {\r\n                activities.forEach((activity) => {\r\n                    //format date from api\r\n                    activity.date = activity.date.split('.')[0];\r\n                    this.activityRegistry.set(activity.id, activity);\r\n                });\r\n            })\r\n            this.loadingInital = false;\r\n            console.log(this.groupActivitiesByDate(activities));\r\n        } catch (error) {\r\n            runInAction(() => {\r\n                this.loadingInital = false;\r\n            })\r\n            console.log(error);\r\n        }\r\n    }\r\n\r\n    @action loadActivity = async (id: string) => {\r\n        let activity = this.getActivity(id);\r\n\r\n        if (activity) {\r\n            this.activity = activity;\r\n        } else {\r\n            this.loadingInital = true;\r\n            try {\r\n                activity = await agent.Activities.details(id);\r\n                runInAction(() => {\r\n                    this.activity = activity;\r\n                    this.loadingInital = false;\r\n                })\r\n            } catch (error) {\r\n                runInAction(() => {\r\n                    this.loadingInital = false;\r\n                })\r\n                console.log(error);\r\n            }\r\n        }\r\n    }\r\n\r\n    @action clearActivity = () => {\r\n        this.activity = null;\r\n    }\r\n\r\n    getActivity = (id: string) => {\r\n        return this.activityRegistry.get(id);\r\n    }\r\n\r\n    @action createActivity = async (activity: IActivity) => {\r\n        this.submitting = true;\r\n\r\n        try {\r\n            await agent.Activities.create(activity);\r\n            runInAction(() => {\r\n                this.activityRegistry.set(activity.id, activity);\r\n                this.submitting = false;\r\n            })            \r\n        } catch (error) {\r\n            runInAction(() => {\r\n                this.submitting = false;\r\n            })\r\n            console.log(error);\r\n        }\r\n    }\r\n\r\n    @action editActivity = async (activity: IActivity) => {\r\n        this.submitting = true;\r\n        try {\r\n            await agent.Activities.update(activity);\r\n            runInAction(() => {\r\n                this.activityRegistry.set(activity.id, activity);\r\n                this.activity = activity;\r\n                this.submitting = false;\r\n            })\r\n        } catch (error) {\r\n            runInAction(() => {\r\n                this.submitting = false;\r\n            })\r\n            console.log(error);\r\n        }\r\n    }\r\n\r\n    @action deleteActivity = async (event: SyntheticEvent<HTMLButtonElement>, id: string) => {\r\n        this.submitting = true;\r\n        this.target = event.currentTarget.name;\r\n        try {\r\n            await agent.Activities.delete(id);\r\n            runInAction(() => {\r\n                this.activityRegistry.delete(id);\r\n                this.submitting = false;\r\n                this.target = '';\r\n            })\r\n        } catch (error) {\r\n            runInAction(() => {\r\n                this.submitting = false;\r\n                this.target = '';\r\n            })\r\n            console.log(error);\r\n        }\r\n    }\r\n}\r\n\r\nexport default createContext(new ActivityStore());","G:\\Oliver\\Development\\App with .Net Core and React - Udemy\\Reactivities\\client-app\\src\\features\\home\\HomePage.tsx",[],"G:\\Oliver\\Development\\App with .Net Core and React - Udemy\\Reactivities\\client-app\\src\\app\\layout\\ScrollToTop.tsx",[],"G:\\Oliver\\Development\\App with .Net Core and React - Udemy\\Reactivities\\client-app\\src\\features\\activities\\dashboard\\ActivityListItem.tsx",[],"G:\\Oliver\\Development\\App with .Net Core and React - Udemy\\Reactivities\\client-app\\src\\features\\activities\\details\\ActivityDetailedHeader.tsx",[],"G:\\Oliver\\Development\\App with .Net Core and React - Udemy\\Reactivities\\client-app\\src\\features\\activities\\details\\ActivityDetailedSidebar.tsx",[],"G:\\Oliver\\Development\\App with .Net Core and React - Udemy\\Reactivities\\client-app\\src\\features\\activities\\details\\ActivityDetailedInfo.tsx",[],"G:\\Oliver\\Development\\App with .Net Core and React - Udemy\\Reactivities\\client-app\\src\\features\\activities\\details\\ActivityDetailedChat.tsx",[],"G:\\Oliver\\Development\\App with .Net Core and React - Udemy\\Reactivities\\client-app\\src\\app\\layout\\NotFound.tsx",[],{"ruleId":"92","replacedBy":"93"},{"ruleId":"94","replacedBy":"95"},{"ruleId":"96","severity":1,"message":"97","line":18,"column":10,"nodeType":"98","messageId":"99","endLine":18,"endColumn":28,"fix":"100"},{"ruleId":"101","severity":1,"message":"102","line":7,"column":10,"nodeType":"103","messageId":"104","endLine":7,"endColumn":19},{"ruleId":"105","severity":1,"message":"106","line":45,"column":1,"nodeType":"107","endLine":47,"endColumn":2},{"ruleId":"101","severity":1,"message":"108","line":1,"column":10,"nodeType":"103","messageId":"104","endLine":1,"endColumn":16},"no-native-reassign",["109"],"no-negated-in-lhs",["110"],"no-useless-rename","Destructuring assignment activity unnecessarily renamed.","Property","unnecessarilyRenamed",{"range":"111","text":"112"},"@typescript-eslint/no-unused-vars","'Interface' is defined but never used.","Identifier","unusedVar","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","'throws' is defined but never used.","no-global-assign","no-unsafe-negation",[782,800],"activity"]