[{"G:\\Oliver\\Development\\App with .Net Core and React - Udemy\\Reactivities\\client-app\\src\\index.tsx":"1","G:\\Oliver\\Development\\App with .Net Core and React - Udemy\\Reactivities\\client-app\\src\\reportWebVitals.ts":"2","G:\\Oliver\\Development\\App with .Net Core and React - Udemy\\Reactivities\\client-app\\src\\app\\layout\\App.tsx":"3","G:\\Oliver\\Development\\App with .Net Core and React - Udemy\\Reactivities\\client-app\\src\\features\\nav\\NavBar.tsx":"4","G:\\Oliver\\Development\\App with .Net Core and React - Udemy\\Reactivities\\client-app\\src\\features\\activities\\dashboard\\ActivityDashboard.tsx":"5","G:\\Oliver\\Development\\App with .Net Core and React - Udemy\\Reactivities\\client-app\\src\\features\\activities\\dashboard\\ActivityList.tsx":"6","G:\\Oliver\\Development\\App with .Net Core and React - Udemy\\Reactivities\\client-app\\src\\features\\activities\\details\\ActivityDetails.tsx":"7","G:\\Oliver\\Development\\App with .Net Core and React - Udemy\\Reactivities\\client-app\\src\\features\\activities\\form\\ActivityForm.tsx":"8","G:\\Oliver\\Development\\App with .Net Core and React - Udemy\\Reactivities\\client-app\\src\\app\\models\\activity.ts":"9","G:\\Oliver\\Development\\App with .Net Core and React - Udemy\\Reactivities\\client-app\\src\\app\\api\\agent.ts":"10","G:\\Oliver\\Development\\App with .Net Core and React - Udemy\\Reactivities\\client-app\\src\\app\\layout\\LoadingComponent.tsx":"11","G:\\Oliver\\Development\\App with .Net Core and React - Udemy\\Reactivities\\client-app\\src\\app\\stores\\activityStore.ts":"12","G:\\Oliver\\Development\\App with .Net Core and React - Udemy\\Reactivities\\client-app\\src\\features\\home\\HomePage.tsx":"13","G:\\Oliver\\Development\\App with .Net Core and React - Udemy\\Reactivities\\client-app\\src\\app\\layout\\ScrollToTop.tsx":"14","G:\\Oliver\\Development\\App with .Net Core and React - Udemy\\Reactivities\\client-app\\src\\features\\activities\\dashboard\\ActivityListItem.tsx":"15","G:\\Oliver\\Development\\App with .Net Core and React - Udemy\\Reactivities\\client-app\\src\\features\\activities\\details\\ActivityDetailedHeader.tsx":"16","G:\\Oliver\\Development\\App with .Net Core and React - Udemy\\Reactivities\\client-app\\src\\features\\activities\\details\\ActivityDetailedSidebar.tsx":"17","G:\\Oliver\\Development\\App with .Net Core and React - Udemy\\Reactivities\\client-app\\src\\features\\activities\\details\\ActivityDetailedInfo.tsx":"18","G:\\Oliver\\Development\\App with .Net Core and React - Udemy\\Reactivities\\client-app\\src\\features\\activities\\details\\ActivityDetailedChat.tsx":"19"},{"size":698,"mtime":1614617636872,"results":"20","hashOfConfig":"21"},{"size":425,"mtime":499162500000,"results":"22","hashOfConfig":"21"},{"size":1223,"mtime":1614618617714,"results":"23","hashOfConfig":"21"},{"size":805,"mtime":1614618239941,"results":"24","hashOfConfig":"21"},{"size":932,"mtime":1614618601023,"results":"25","hashOfConfig":"21"},{"size":1053,"mtime":1614878027328,"results":"26","hashOfConfig":"21"},{"size":1464,"mtime":1614877033188,"results":"27","hashOfConfig":"21"},{"size":3503,"mtime":1614877999641,"results":"28","hashOfConfig":"21"},{"size":169,"mtime":1611074683773,"results":"29","hashOfConfig":"21"},{"size":1187,"mtime":1611768260379,"results":"30","hashOfConfig":"21"},{"size":376,"mtime":1611767340750,"results":"31","hashOfConfig":"21"},{"size":4731,"mtime":1614703359916,"results":"32","hashOfConfig":"21"},{"size":824,"mtime":1614878098213,"results":"33","hashOfConfig":"21"},{"size":294,"mtime":1614617571663,"results":"34","hashOfConfig":"21"},{"size":1553,"mtime":1614878036692,"results":"35","hashOfConfig":"21"},{"size":1740,"mtime":1614705786716,"results":"36","hashOfConfig":"21"},{"size":2167,"mtime":1614877867848,"results":"37","hashOfConfig":"21"},{"size":1620,"mtime":1614877086865,"results":"38","hashOfConfig":"21"},{"size":2122,"mtime":1614877402975,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"mtc19r",{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":null},{"filePath":"55","messages":"56","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"42"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"42"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"G:\\Oliver\\Development\\App with .Net Core and React - Udemy\\Reactivities\\client-app\\src\\index.tsx",[],["81","82"],"G:\\Oliver\\Development\\App with .Net Core and React - Udemy\\Reactivities\\client-app\\src\\reportWebVitals.ts",[],"G:\\Oliver\\Development\\App with .Net Core and React - Udemy\\Reactivities\\client-app\\src\\app\\layout\\App.tsx",[],"G:\\Oliver\\Development\\App with .Net Core and React - Udemy\\Reactivities\\client-app\\src\\features\\nav\\NavBar.tsx",[],"G:\\Oliver\\Development\\App with .Net Core and React - Udemy\\Reactivities\\client-app\\src\\features\\activities\\dashboard\\ActivityDashboard.tsx",[],"G:\\Oliver\\Development\\App with .Net Core and React - Udemy\\Reactivities\\client-app\\src\\features\\activities\\dashboard\\ActivityList.tsx",[],"G:\\Oliver\\Development\\App with .Net Core and React - Udemy\\Reactivities\\client-app\\src\\features\\activities\\details\\ActivityDetails.tsx",["83"],"G:\\Oliver\\Development\\App with .Net Core and React - Udemy\\Reactivities\\client-app\\src\\features\\activities\\form\\ActivityForm.tsx",["84"],"G:\\Oliver\\Development\\App with .Net Core and React - Udemy\\Reactivities\\client-app\\src\\app\\models\\activity.ts",[],"G:\\Oliver\\Development\\App with .Net Core and React - Udemy\\Reactivities\\client-app\\src\\app\\api\\agent.ts",["85"],"import axios, { AxiosResponse } from 'axios';\r\nimport { IActivity } from '../models/activity';\r\n\r\naxios.defaults.baseURL = 'http://localhost:5000/api';\r\n\r\nconst responseBody = (response: AxiosResponse) => response.data;\r\n\r\nconst sleep = (ms: number) => (response: AxiosResponse) => \r\n    new Promise<AxiosResponse>(resolve => setTimeout(() => resolve(response), ms));\r\n\r\nconst requests = {\r\n    get: (url: string) => axios.get(url).then(sleep(1000)).then(responseBody),\r\n    post: (url: string, body: {}) => axios.post(url, body).then(sleep(1000)).then(responseBody),\r\n    put: (url: string, body: {}) => axios.put(url, body).then(sleep(1000)).then(responseBody),\r\n    delete: (url: string) => axios.delete(url).then(sleep(1000)).then(responseBody),\r\n}\r\n\r\nconst Activities = {\r\n    list: (): Promise<IActivity[]> => requests.get('/activities'),\r\n    details: (id: string) => requests.get(`/activities/${id}`),\r\n    create: (activity: IActivity) => requests.post('/activities', activity),\r\n    update: (activity: IActivity) => requests.put(`/activities/${activity.id}`, activity),\r\n    delete: (id: string) => requests.delete(`/activities/${id}`)\r\n}\r\n\r\nexport default {\r\n    Activities\r\n}","G:\\Oliver\\Development\\App with .Net Core and React - Udemy\\Reactivities\\client-app\\src\\app\\layout\\LoadingComponent.tsx",[],"G:\\Oliver\\Development\\App with .Net Core and React - Udemy\\Reactivities\\client-app\\src\\app\\stores\\activityStore.ts",["86"],"import { throws } from 'assert';\r\nimport { observable, action, makeObservable, computed, configure, runInAction } from 'mobx';\r\nimport { createContext, SyntheticEvent } from 'react';\r\nimport agent from '../api/agent';\r\nimport { IActivity } from '../models/activity';\r\n\r\nconfigure({enforceActions: 'always'});\r\n\r\nexport class ActivityStore {\r\n    @observable activityRegistry = new Map();\r\n    @observable activities: IActivity[] = [];\r\n    @observable activity: IActivity | null = null;\r\n    @observable loadingInital = false;\r\n    @observable submitting = false;\r\n    @observable target = '';\r\n\r\n    @computed get activitiesByDate() {\r\n        return this.groupActivitiesByDate(Array.from(this.activityRegistry.values()));\r\n        //return Array.from(this.activityRegistry.values()).slice().sort((a, b) => Date.parse(a.date) - Date.parse(b.date))\r\n    }\r\n\r\n    groupActivitiesByDate(activities: IActivity[]) {\r\n        const sortedActivities = activities.slice().sort(\r\n            (a, b) => Date.parse(a.date) - Date.parse(b.date)\r\n        )\r\n        return Object.entries(sortedActivities.reduce((activities, activity)=> {\r\n            const date = activity.date.split('T')[0];\r\n            activities[date] = activities[date] ? [...activities[date], activity] : [activity];\r\n            return activities;\r\n        }, {} as {[key: string]: IActivity[]}));\r\n    }\r\n\r\n    constructor() {\r\n        makeObservable(this);\r\n    }\r\n\r\n    @action loadActivities = async () => {\r\n        this.loadingInital = true;\r\n        try {\r\n            const activities = await agent.Activities.list();\r\n            runInAction(() => {\r\n                activities.forEach((activity) => {\r\n                    //format date from api\r\n                    activity.date = activity.date.split('.')[0];\r\n                    this.activityRegistry.set(activity.id, activity);\r\n                });\r\n            })\r\n            this.loadingInital = false;\r\n            console.log(this.groupActivitiesByDate(activities));\r\n        } catch (error) {\r\n            runInAction(() => {\r\n                this.loadingInital = false;\r\n            })\r\n            console.log(error);\r\n        }\r\n    }\r\n\r\n    @action loadActivity = async (id: string) => {\r\n        let activity = this.getActivity(id);\r\n\r\n        if (activity) {\r\n            this.activity = activity;\r\n        } else {\r\n            this.loadingInital = true;\r\n            try {\r\n                activity = await agent.Activities.details(id);\r\n                runInAction(() => {\r\n                    this.activity = activity;\r\n                    this.loadingInital = false;\r\n                })\r\n            } catch (error) {\r\n                runInAction(() => {\r\n                    this.loadingInital = false;\r\n                })\r\n                console.log(error);\r\n            }\r\n        }\r\n    }\r\n\r\n    @action clearActivity = () => {\r\n        this.activity = null;\r\n    }\r\n\r\n    getActivity = (id: string) => {\r\n        return this.activityRegistry.get(id);\r\n    }\r\n\r\n    @action createActivity = async (activity: IActivity) => {\r\n        this.submitting = true;\r\n\r\n        try {\r\n            await agent.Activities.create(activity);\r\n            runInAction(() => {\r\n                this.activityRegistry.set(activity.id, activity);\r\n                this.submitting = false;\r\n            })            \r\n        } catch (error) {\r\n            runInAction(() => {\r\n                this.submitting = false;\r\n            })\r\n            console.log(error);\r\n        }\r\n    }\r\n\r\n    @action editActivity = async (activity: IActivity) => {\r\n        this.submitting = true;\r\n        try {\r\n            await agent.Activities.update(activity);\r\n            runInAction(() => {\r\n                this.activityRegistry.set(activity.id, activity);\r\n                this.activity = activity;\r\n                this.submitting = false;\r\n            })\r\n        } catch (error) {\r\n            runInAction(() => {\r\n                this.submitting = false;\r\n            })\r\n            console.log(error);\r\n        }\r\n    }\r\n\r\n    @action deleteActivity = async (event: SyntheticEvent<HTMLButtonElement>, id: string) => {\r\n        this.submitting = true;\r\n        this.target = event.currentTarget.name;\r\n        try {\r\n            await agent.Activities.delete(id);\r\n            runInAction(() => {\r\n                this.activityRegistry.delete(id);\r\n                this.submitting = false;\r\n                this.target = '';\r\n            })\r\n        } catch (error) {\r\n            runInAction(() => {\r\n                this.submitting = false;\r\n                this.target = '';\r\n            })\r\n            console.log(error);\r\n        }\r\n    }\r\n}\r\n\r\nexport default createContext(new ActivityStore());","G:\\Oliver\\Development\\App with .Net Core and React - Udemy\\Reactivities\\client-app\\src\\features\\home\\HomePage.tsx",[],"G:\\Oliver\\Development\\App with .Net Core and React - Udemy\\Reactivities\\client-app\\src\\app\\layout\\ScrollToTop.tsx",[],"G:\\Oliver\\Development\\App with .Net Core and React - Udemy\\Reactivities\\client-app\\src\\features\\activities\\dashboard\\ActivityListItem.tsx",[],"G:\\Oliver\\Development\\App with .Net Core and React - Udemy\\Reactivities\\client-app\\src\\features\\activities\\details\\ActivityDetailedHeader.tsx",[],"G:\\Oliver\\Development\\App with .Net Core and React - Udemy\\Reactivities\\client-app\\src\\features\\activities\\details\\ActivityDetailedSidebar.tsx",[],"G:\\Oliver\\Development\\App with .Net Core and React - Udemy\\Reactivities\\client-app\\src\\features\\activities\\details\\ActivityDetailedInfo.tsx",[],"G:\\Oliver\\Development\\App with .Net Core and React - Udemy\\Reactivities\\client-app\\src\\features\\activities\\details\\ActivityDetailedChat.tsx",[],{"ruleId":"87","replacedBy":"88"},{"ruleId":"89","replacedBy":"90"},{"ruleId":"91","severity":1,"message":"92","line":18,"column":10,"nodeType":"93","messageId":"94","endLine":18,"endColumn":28,"fix":"95"},{"ruleId":"96","severity":1,"message":"97","line":7,"column":10,"nodeType":"98","messageId":"99","endLine":7,"endColumn":19},{"ruleId":"100","severity":1,"message":"101","line":26,"column":1,"nodeType":"102","endLine":28,"endColumn":2},{"ruleId":"96","severity":1,"message":"103","line":1,"column":10,"nodeType":"98","messageId":"99","endLine":1,"endColumn":16},"no-native-reassign",["104"],"no-negated-in-lhs",["105"],"no-useless-rename","Destructuring assignment activity unnecessarily renamed.","Property","unnecessarilyRenamed",{"range":"106","text":"107"},"@typescript-eslint/no-unused-vars","'Interface' is defined but never used.","Identifier","unusedVar","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","'throws' is defined but never used.","no-global-assign","no-unsafe-negation",[782,800],"activity"]